<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="com.obiscr.chatgpt.settings.EasyCodeState">
    <option name="projectFiles" value="$PROJECT_DIR$/app/src/androidTest/java/eu/anifantakis/mitropolitikomoviesadvanced/ExampleInstrumentedTest.kt;/Users/ianyfantakis/AndroidStudioProjects/MitropolitikoMoviesAdvanced/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/data/CommonHttpClient.kt;/Users/ianyfantakis/AndroidStudioProjects/MitropolitikoMoviesAdvanced/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/domain/DataResult.kt;/Users/ianyfantakis/AndroidStudioProjects/MitropolitikoMoviesAdvanced/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/domain/Error.kt;/Users/ianyfantakis/AndroidStudioProjects/MitropolitikoMoviesAdvanced/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/design/components/scaffold/ApplicationScaffold.kt;/Users/ianyfantakis/AndroidStudioProjects/MitropolitikoMoviesAdvanced/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/design/components/scaffold/ScaffoldViewModel.kt;/Users/ianyfantakis/AndroidStudioProjects/MitropolitikoMoviesAdvanced/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/design/components/AppBottomNavBar.kt;/Users/ianyfantakis/AndroidStudioProjects/MitropolitikoMoviesAdvanced/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/design/components/AppTopAppBar.kt;/Users/ianyfantakis/AndroidStudioProjects/MitropolitikoMoviesAdvanced/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/design/Icons.kt;/Users/ianyfantakis/AndroidStudioProjects/MitropolitikoMoviesAdvanced/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/design/UIConst.kt;/Users/ianyfantakis/AndroidStudioProjects/MitropolitikoMoviesAdvanced/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/utils/DataErrorToText.kt;/Users/ianyfantakis/AndroidStudioProjects/MitropolitikoMoviesAdvanced/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/utils/NavBackStackEntryExt.kt;/Users/ianyfantakis/AndroidStudioProjects/MitropolitikoMoviesAdvanced/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/utils/NavHostControllerExt.kt;/Users/ianyfantakis/AndroidStudioProjects/MitropolitikoMoviesAdvanced/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/utils/ObserveEffects.kt;/Users/ianyfantakis/AndroidStudioProjects/MitropolitikoMoviesAdvanced/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/utils/SavedStateHandleExt.kt;/Users/ianyfantakis/AndroidStudioProjects/MitropolitikoMoviesAdvanced/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/utils/StateFlowExt.kt;/Users/ianyfantakis/AndroidStudioProjects/MitropolitikoMoviesAdvanced/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/utils/UiText.kt;/Users/ianyfantakis/AndroidStudioProjects/MitropolitikoMoviesAdvanced/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/di/core/appModule.kt;/Users/ianyfantakis/AndroidStudioProjects/MitropolitikoMoviesAdvanced/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/movies/presentation/components/ThumbnailLoader.kt;/Users/ianyfantakis/AndroidStudioProjects/MitropolitikoMoviesAdvanced/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/nav/NavigationGraphFavorites.kt;/Users/ianyfantakis/AndroidStudioProjects/MitropolitikoMoviesAdvanced/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/nav/NavigationGraphRandom.kt;/Users/ianyfantakis/AndroidStudioProjects/MitropolitikoMoviesAdvanced/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/nav/NavigationRoot.kt;/Users/ianyfantakis/AndroidStudioProjects/MitropolitikoMoviesAdvanced/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/ui/theme/Color.kt;/Users/ianyfantakis/AndroidStudioProjects/MitropolitikoMoviesAdvanced/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/ui/theme/Theme.kt;/Users/ianyfantakis/AndroidStudioProjects/MitropolitikoMoviesAdvanced/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/ui/theme/Type.kt;/Users/ianyfantakis/AndroidStudioProjects/MitropolitikoMoviesAdvanced/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/AppApplication.kt;/Users/ianyfantakis/AndroidStudioProjects/MitropolitikoMoviesAdvanced/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/MainActivity.kt;/Users/ianyfantakis/AndroidStudioProjects/MitropolitikoMoviesAdvanced/app/src/test/java/eu/anifantakis/mitropolitikomoviesadvanced/ExampleUnitTest.kt;/Users/ianyfantakis/AndroidStudioProjects/MitropolitikoMoviesAdvanced/app/build.gradle.kts;/Users/ianyfantakis/AndroidStudioProjects/MitropolitikoMoviesAdvanced/build.gradle.kts;/Users/ianyfantakis/AndroidStudioProjects/MitropolitikoMoviesAdvanced/settings.gradle.kts" />
    <option name="forceFullIndex" value="false" />
    <option name="fileSummaryMaps" value="{&quot;/Users/ianyfantakis/AndroidStudioProjects/MitropolitikoMoviesAdvanced&quot;:&quot;{\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/utils/DataErrorToText.kt\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`DataError.asUiText()`: This function converts a `DataError` object to a `UiText` object, which represents a user-friendly error message that can be displayed in the UI.\\n\\nThe file is responsible for mapping different types of `DataError` objects to corresponding `UiText` objects, which can be used to display appropriate error messages to the user.\&quot;,\&quot;/app/src/test/java/eu/anifantakis/mitropolitikomoviesadvanced/ExampleUnitTest.kt\&quot;:\&quot;This file contains a single unit test class with one test function. The file does not define any classes or functions, but rather contains a single unit test that checks if the addition of 2 and 2 is correct.\\n\\n`ExampleUnitTest`: A unit test class that contains a single test function to verify the correctness of a simple addition operation.\\n\\n`addition_isCorrect()`: A test function that checks if the addition of 2 and 2 is equal to 4, which is the expected result.\&quot;,\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/ui/theme/Color.kt\&quot;:\&quot;This file does not contain any classes or functions. Instead, it defines a set of color values that are likely used throughout the application\\u0027s user interface. The colors are defined in two sets: one for a dark theme and one for a light theme. The colors are named based on their hue and saturation, with the \\\&quot;80\\\&quot; suffix indicating a darker version and the \\\&quot;40\\\&quot; suffix indicating a lighter version.\&quot;,\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/design/components/scaffold/ScaffoldViewModel.kt\&quot;:\&quot;`ScaffoldViewModel`: A ViewModel class that manages the state of a scaffold UI component, including the app bar title, back press functionality, and the heights of the top and bottom bars.\\n\\n`updateAppBar`: Updates the app bar title and back press functionality.\\n\\n`setTopBarHeight`: Sets the height of the top bar.\\n\\n`setBottomBarHeight`: Sets the height of the bottom bar.\&quot;,\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/utils/UiText.kt\&quot;:\&quot;This file defines a sealed interface `UiText` and its two implementing classes, `DynamicString` and `StringResource`, along with two extension functions `asString()` that provide a way to retrieve the string representation of the `UiText` object.\\n\\n`UiText`: A sealed interface that represents a piece of text that can be either a dynamic string or a string resource.\\n\\n`DynamicString`: A data class that represents a dynamic string value.\\n\\n`StringResource`: A class that represents a string resource with an optional set of arguments.\\n\\n`asString()`: A Composable function that returns the string representation of the `UiText` object.\\n\\n`asString(Context)`: A function that returns the string representation of the `UiText` object using the provided `Context`.\&quot;,\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/utils/StateFlowExt.kt\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`toComposeState`: This function converts a `StateFlow` to a `State` that can be used with Jetpack Compose, by creating a `mutableStateOf` and collecting the values from the `StateFlow` to update the `mutableStateOf`.\\n\\nThe file also provides a Kotlin documentation comment that explains the purpose of the `toComposeState` function.\&quot;,\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/domain/DataResult.kt\&quot;:\&quot;This file defines a sealed interface `DataResult` and provides utility functions to work with it.\\n\\n`DataResult`: A sealed interface that represents the result of a data operation, which can be either a `Success` or a `Failure`.\\n\\n`DataResult.Success`: A data class that represents a successful data operation, containing the data.\\n\\n`DataResult.Failure`: A data class that represents a failed data operation, containing the error.\\n\\n`map`: A function that applies a transformation to the data in a `DataResult.Success`, while preserving the `DataResult.Failure`.\\n\\n`EmptyDataResult`: A type alias for a `DataResult` where the successful data is a `Unit`.\\n\\n`asEmptyDataResult`: A function that converts a `DataResult` to an `EmptyDataResult` by mapping the successful data to `Unit`.\&quot;,\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/MainActivity.kt\&quot;:\&quot;This file appears to be the main activity of an Android application built using Jetpack Compose. It sets up the application\\u0027s theme, navigation, and initial UI components.\\n\\n`MainActivity`: The main activity of the application, which sets up the Compose-based UI and enables edge-to-edge mode.\\n\\n`Greeting`: A simple Composable function that displays a greeting message with the provided name.\\n\\nThe file also includes a `GreetingPreview` Composable function, which is used for previewing the `Greeting` function in the Android Studio preview.\&quot;,\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/utils/ObserveEffects.kt\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`ObserveEffects`: A Composable function that observes a Flow and executes the provided `onEvent` callback whenever a new value is emitted from the Flow, while ensuring the observation is scoped to the Lifecycle of the current Composable.\\n\\nThis file provides a utility function to observe a Flow and handle its events within a Composable function, ensuring the observation is properly scoped to the Lifecycle of the current Composable.\&quot;,\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/AppApplication.kt\&quot;:\&quot;This file is the main application class for the \\\&quot;Mitropolitiko Movies Advanced\\\&quot; Android app. It sets up the Koin dependency injection framework and Timber logging for the application.\\n\\n`AppApplication`: This is the main application class that extends `Application` and is responsible for initializing the Koin dependency injection framework and Timber logging.\\n\\n`onCreate()`: This function is overridden from the `Application` class and is called when the application is created. It sets up Timber logging and starts the Koin dependency injection framework.\&quot;,\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/design/components/AppTopAppBar.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`AppTopAppBar`: A composable function that creates a top app bar with a title and an optional back button.\\n\\nThe file defines a custom top app bar component for an Android app built using Jetpack Compose. The top app bar includes a title and an optional back button that can be used to navigate back to the previous screen.\&quot;,\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/ui/theme/Theme.kt\&quot;:\&quot;This file defines the theme for the \\\&quot;MitropolitikoMoviesAdvanced\\\&quot; Android app using Jetpack Compose.\\n\\n`DarkColorScheme`: Defines the dark color scheme for the app.\\n\\n`LightColorScheme`: Defines the light color scheme for the app.\\n\\n`MitropolitikoMoviesAdvancedTheme`: Provides a composable function that sets the app\\u0027s theme based on the system\\u0027s dark mode setting and the device\\u0027s Android version.\&quot;,\&quot;/settings.gradle.kts\&quot;:\&quot;This file is a Gradle configuration file that sets up the project\\u0027s plugin management, dependency resolution, and repository settings. It does not contain any classes or functions. Instead, it configures the following:\\n\\n`pluginManagement`: Specifies the repositories to be used for resolving Gradle plugins, including Google, Maven Central, and the Gradle Plugin Portal.\\n\\n`dependencyResolutionManagement`: Configures the repositories to be used for resolving project dependencies, including Google, Maven Central, and the Jitpack repository.\\n\\n`rootProject.name`: Sets the name of the root project to \\\&quot;MitropolitikoMoviesAdvanced\\\&quot;.\\n\\n`include(\\\&quot;:app\\\&quot;)`: Includes the \\\&quot;:app\\\&quot; module in the project.\&quot;,\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/domain/Error.kt\&quot;:\&quot;This file defines an `Error` interface and a `DataError` sealed interface, which represents different types of errors that can occur in the application.\\n\\n`Error`: An interface that represents an error.\\n\\n`DataError`: A sealed interface that represents different types of data errors, including network errors (with specific HTTP status codes) and local errors.\\n\\n`DataError.Network`: An enum that represents different types of network errors, including specific HTTP status codes and generic errors.\\n\\n`DataError.Local`: An enum that represents local errors, such as a disk full error.\\n\\nThis file provides a centralized way to define and handle different types of errors in the application, which can be useful for error handling and reporting.\&quot;,\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/nav/NavigationGraphRandom.kt\&quot;:\&quot;This file defines a navigation graph for a \\\&quot;Random Movies\\\&quot; feature in an Android app built using Jetpack Compose.\\n\\n`RandomMoviesNavType`: A sealed interface that defines the different navigation types for the \\\&quot;Random Movies\\\&quot; feature, including a list of movies and a selected movie.\\n\\n`randomMoviesGraph`: A function that sets up the navigation graph for the \\\&quot;Random Movies\\\&quot; feature, including a composable for the list of movies.\&quot;,\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/ui/theme/Type.kt\&quot;:\&quot;This file defines the typography styles for a Jetpack Compose-based Android application. It sets the default text style for the `bodyLarge` component, and provides commented-out examples for other text styles such as `titleLarge` and `labelSmall`.\\n\\n`Typography`: Defines the set of Material typography styles to be used in the application.\&quot;,\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/design/UIConst.kt\&quot;:\&quot;This file contains a single object named `UIConst` that defines various constants and a function related to the user interface design of the application.\\n\\n`UIConst`: An object that provides constants and utility functions for the user interface design of the application.\\n\\n`paddingNormal`, `paddingDouble`, `paddingSmall`, `paddingExtraSmall`: Constants that define various padding values used in the user interface.\\n\\n`grayOutColor`: A function that takes a `Color` and a blend factor, and returns a new `Color` that is a blend of the input `Color` and gray, with the specified blend factor.\&quot;,\&quot;/app/build.gradle.kts\&quot;:\&quot;This file is a Gradle build script for an Android application. It sets up the project configuration, dependencies, and build types for the application. There are no classes or functions defined in this file. Instead, it configures the Android build process using the Gradle DSL.\\n\\nThe main components of this file are:\\n\\n`plugins`: Applies various Gradle plugins, including Android application, Kotlin, and Compose plugins.\\n`android`: Configures the Android build settings, such as the namespace, compile SDK version, default config, and build types.\\n`dependencies`: Specifies the dependencies for the application, including Android core libraries, Compose, Koin, Ktor, Room, and other utility libraries.\\n`configureDebugBuildType`: Configures the debug build type, including setting the API key and base URL for the movie API.\\n`configureReleaseBuildType`: Configures the release build type, including setting the API key and base URL for the movie API.\&quot;,\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/design/components/AppBottomNavBar.kt\&quot;:\&quot;This file contains the implementation of a bottom navigation bar for an Android app built using Jetpack Compose.\\n\\n`BottomNavigationItem`: A data class that represents a single item in the bottom navigation bar, including its label, icon, and navigation route.\\n\\n`bottomNavigationItems()`: A Composable function that returns a list of `BottomNavigationItem` instances representing the items to be displayed in the bottom navigation bar.\\n\\n`AppBottomNavBar`: A Composable function that creates the bottom navigation bar, displaying the items defined in the `BottomNavigationItem` class and handling the navigation logic when an item is clicked.\&quot;,\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/design/Icons.kt\&quot;:\&quot;This file does not contain any classes or functions. Instead, it defines a set of icons that can be used in the application\\u0027s user interface. The file contains the following:\\n\\n`Icons`: This object provides access to various icons, including an app launcher icon and icons for representing a favorite state (outlined and filled).\\n\\nThe file serves as a centralized location for managing the icons used in the application\\u0027s user interface, making it easier to access and use these icons throughout the codebase.\&quot;,\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/nav/NavigationRoot.kt\&quot;:\&quot;This file defines the navigation structure for a movie app using Jetpack Compose.\\n\\n`NavGraph`: A sealed interface that defines the different navigation graphs in the app, such as `FavoriteMovies` and `RandomMovies`.\\n\\n`NavigationRoot`: A composable function that sets up the navigation structure, including the `ApplicationScaffold` and the `NavHost` that hosts the different navigation graphs.\\n\\n`randomMoviesGraph`: A function that defines the navigation graph for the random movies feature.\\n\\n`favoriteMoviesGraph`: A function that defines the navigation graph for the favorite movies feature.\&quot;,\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/nav/NavigationGraphFavorites.kt\&quot;:\&quot;This file defines a navigation graph for a \\\&quot;Favorite Movies\\\&quot; feature in an Android app built using Jetpack Compose.\\n\\n`FavoriteMoviesNavType`: A sealed interface that represents the different navigation types for the \\\&quot;Favorite Movies\\\&quot; feature, including a list of movies and a selected movie.\\n\\n`favoriteMoviesGraph`: A function that sets up the navigation graph for the \\\&quot;Favorite Movies\\\&quot; feature, including a composable for the list of favorite movies.\&quot;,\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/movies/presentation/components/ThumbnailLoader.kt\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`ThumbnailLoader`: This function loads and displays a movie thumbnail image using the Coil library, and if the image path is not provided, it displays a default placeholder image.\\n\\nThe file is responsible for rendering a movie thumbnail image in a Compose UI component, using the provided image path or a default placeholder image if the path is not available.\&quot;,\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/di/core/appModule.kt\&quot;:\&quot;This file defines a Koin module for the `eu.anifantakis.mitropolitikomoviesadvanced` application. It provides the following:\\n\\n`PersistManager`: A singleton instance of the `PersistManager` class, which is used for secure data persistence.\\n\\n`CoroutineScope`: A singleton instance of the application\\u0027s `CoroutineScope`, which can be used for global coroutine-based operations.\\n\\n`ScaffoldViewModel`: A view model for the application\\u0027s scaffold component.\\n\\nThe file sets up the necessary dependencies and configurations for the application\\u0027s Koin-based dependency injection system.\&quot;,\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/utils/SavedStateHandleExt.kt\&quot;:\&quot;This file does not contain any classes, but it does contain the following functions:\\n\\n`defaultJson`: Provides a default JSON configuration optimized for state serialization in `SavedStateHandle`.\\n\\n`getMutableStateFlow`: Creates a `MutableStateFlow` backed by `SavedStateHandle` with automatic key inference and selective persistence, combining the power of Kotlin `StateFlow` with `SavedStateHandle` persistence.\\n\\n`createSerializableStateFlow`: An internal helper method that creates a `MutableStateFlow` with serialization and selective persistence, handling the complex logic of retrieving, deserializing, and persisting state to `SavedStateHandle`.\\n\\nThis file provides utility functions for working with `SavedStateHandle` and `StateFlow` in Android applications, particularly in the context of MVI (Model-View-Intent) architecture patterns.\&quot;,\&quot;/build.gradle.kts\&quot;:\&quot;This file is a top-level build file that sets up common configuration options for all sub-projects or modules in the Android application. It does not contain any classes or functions, but instead, it applies various Gradle plugins to the project, including:\\n\\n`alias(libs.plugins.android.application) apply false`: Applies the Android application plugin to the project.\\n`alias(libs.plugins.kotlin.android) apply false`: Applies the Kotlin Android plugin to the project.\\n`alias(libs.plugins.kotlin.compose) apply false`: Applies the Kotlin Compose plugin to the project.\\n`alias(libs.plugins.com.google.devtools.ksp) apply false`: Allows the KSP (Kotlin Symbol Processing) plugin to be applied to the project.\\n\\nThe purpose of this file is to centralize the configuration of common settings and plugins used across all sub-projects or modules in the Android application, making it easier to manage and maintain the project\\u0027s build setup.\&quot;,\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/utils/NavHostControllerExt.kt\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`popAndNavigate`: This function pops to a specific destination and navigates to another destination in the NavHostController.\\n\\nThe file provides a utility function to simplify the process of popping to a specific destination and navigating to another destination within a NavHostController in an Android application.\&quot;,\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/data/CommonHttpClient.kt\&quot;:\&quot;This file contains a single abstract class `CommonHttpClient` and several functions within it. Here\\u0027s a summary of each:\\n\\n`CommonHttpClient`: An abstract class that provides a common implementation for making HTTP requests using the Ktor client library, with support for error handling, logging, and configurable timeouts.\\n\\n`responseToResult`: A function that maps the HTTP response status code to a `DataResult` object, which represents the success or failure of the request.\\n\\n`safeCall`: A function that wraps the execution of an HTTP request in a try-catch block to handle various types of exceptions and return a `DataResult` object.\\n\\n`get`, `post`, `put`, `delete`: Functions that provide a convenient way to make GET, POST, PUT, and DELETE requests, respectively, and return a `DataResult` object.\\n\\nOverall, this file provides a reusable and extensible HTTP client implementation that can be used across different parts of the application, with a focus on error handling and logging.\&quot;,\&quot;/app/src/androidTest/java/eu/anifantakis/mitropolitikomoviesadvanced/ExampleInstrumentedTest.kt\&quot;:\&quot;This file contains an instrumented test for an Android app. It does not contain any classes or functions. Instead, it tests the context of the app under test to ensure that the package name is correct.\\n\\nThe file does the following:\\n\\n1. Imports necessary Android testing libraries and classes.\\n2. Defines an instrumented test class `ExampleInstrumentedTest` that runs on an Android device.\\n3. Includes a single test method `useAppContext()` that checks if the package name of the app under test matches the expected value.\&quot;,\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/design/components/scaffold/ApplicationScaffold.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`ApplicationScaffold`: This function creates a Scaffold component that includes a top app bar, a bottom navigation bar, and a content area that can be customized.\\n\\nThe file also imports several classes and functions from other packages, but does not define any additional classes or functions itself. The purpose of this file is to provide a reusable Scaffold component that can be used throughout the application, with the ability to customize the top app bar and bottom navigation bar.\&quot;,\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/utils/NavBackStackEntryExt.kt\&quot;:\&quot;This file does not contain any classes, but it does contain the following function:\\n\\n`sharedViewModel`: This function allows for the retrieval of a shared ViewModel within nested navigation using Koin, a dependency injection library for Android.\\n\\nThe purpose of this file is to provide a utility function that simplifies the process of accessing a shared ViewModel across different navigation destinations in an Android Compose-based application. This can be useful when you have a ViewModel that needs to be shared across multiple screens or components within your app\\u0027s navigation hierarchy.\&quot;}&quot;}" />
    <option name="fileSkeletonMaps" value="{&quot;/Users/ianyfantakis/AndroidStudioProjects/MitropolitikoMoviesAdvanced&quot;:&quot;{\&quot;/app/src/androidTest/java/eu/anifantakis/mitropolitikomoviesadvanced/ExampleInstrumentedTest.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/androidTest/java/eu/anifantakis/mitropolitikomoviesadvanced/ExampleInstrumentedTest.kt\&quot;,\&quot;file_name\&quot;:\&quot;ExampleInstrumentedTest.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/data/CommonHttpClient.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/data/CommonHttpClient.kt\&quot;,\&quot;file_name\&quot;:\&quot;CommonHttpClient.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/domain/DataResult.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/domain/DataResult.kt\&quot;,\&quot;file_name\&quot;:\&quot;DataResult.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/domain/Error.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/domain/Error.kt\&quot;,\&quot;file_name\&quot;:\&quot;Error.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/design/components/scaffold/ApplicationScaffold.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/design/components/scaffold/ApplicationScaffold.kt\&quot;,\&quot;file_name\&quot;:\&quot;ApplicationScaffold.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/design/components/scaffold/ScaffoldViewModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/design/components/scaffold/ScaffoldViewModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;ScaffoldViewModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/design/components/AppBottomNavBar.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/design/components/AppBottomNavBar.kt\&quot;,\&quot;file_name\&quot;:\&quot;AppBottomNavBar.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/design/components/AppTopAppBar.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/design/components/AppTopAppBar.kt\&quot;,\&quot;file_name\&quot;:\&quot;AppTopAppBar.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/design/Icons.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/design/Icons.kt\&quot;,\&quot;file_name\&quot;:\&quot;Icons.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/design/UIConst.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/design/UIConst.kt\&quot;,\&quot;file_name\&quot;:\&quot;UIConst.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/utils/DataErrorToText.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/utils/DataErrorToText.kt\&quot;,\&quot;file_name\&quot;:\&quot;DataErrorToText.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/utils/NavBackStackEntryExt.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/utils/NavBackStackEntryExt.kt\&quot;,\&quot;file_name\&quot;:\&quot;NavBackStackEntryExt.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/utils/NavHostControllerExt.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/utils/NavHostControllerExt.kt\&quot;,\&quot;file_name\&quot;:\&quot;NavHostControllerExt.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/utils/ObserveEffects.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/utils/ObserveEffects.kt\&quot;,\&quot;file_name\&quot;:\&quot;ObserveEffects.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/utils/SavedStateHandleExt.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/utils/SavedStateHandleExt.kt\&quot;,\&quot;file_name\&quot;:\&quot;SavedStateHandleExt.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/utils/StateFlowExt.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/utils/StateFlowExt.kt\&quot;,\&quot;file_name\&quot;:\&quot;StateFlowExt.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/utils/UiText.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/core/presentation/utils/UiText.kt\&quot;,\&quot;file_name\&quot;:\&quot;UiText.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/di/core/appModule.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/di/core/appModule.kt\&quot;,\&quot;file_name\&quot;:\&quot;appModule.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/movies/presentation/components/ThumbnailLoader.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/movies/presentation/components/ThumbnailLoader.kt\&quot;,\&quot;file_name\&quot;:\&quot;ThumbnailLoader.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/nav/NavigationGraphFavorites.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/nav/NavigationGraphFavorites.kt\&quot;,\&quot;file_name\&quot;:\&quot;NavigationGraphFavorites.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/nav/NavigationGraphRandom.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/nav/NavigationGraphRandom.kt\&quot;,\&quot;file_name\&quot;:\&quot;NavigationGraphRandom.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/nav/NavigationRoot.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/nav/NavigationRoot.kt\&quot;,\&quot;file_name\&quot;:\&quot;NavigationRoot.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/ui/theme/Color.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/ui/theme/Color.kt\&quot;,\&quot;file_name\&quot;:\&quot;Color.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/ui/theme/Theme.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/ui/theme/Theme.kt\&quot;,\&quot;file_name\&quot;:\&quot;Theme.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/ui/theme/Type.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/ui/theme/Type.kt\&quot;,\&quot;file_name\&quot;:\&quot;Type.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/AppApplication.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/AppApplication.kt\&quot;,\&quot;file_name\&quot;:\&quot;AppApplication.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/MainActivity.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/eu/anifantakis/mitropolitikomoviesadvanced/MainActivity.kt\&quot;,\&quot;file_name\&quot;:\&quot;MainActivity.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/test/java/eu/anifantakis/mitropolitikomoviesadvanced/ExampleUnitTest.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/test/java/eu/anifantakis/mitropolitikomoviesadvanced/ExampleUnitTest.kt\&quot;,\&quot;file_name\&quot;:\&quot;ExampleUnitTest.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/build.gradle.kts\&quot;:{\&quot;file_path\&quot;:\&quot;/app/build.gradle.kts\&quot;,\&quot;file_name\&quot;:\&quot;build.gradle.kts\&quot;,\&quot;methods\&quot;:[]},\&quot;/build.gradle.kts\&quot;:{\&quot;file_path\&quot;:\&quot;/build.gradle.kts\&quot;,\&quot;file_name\&quot;:\&quot;build.gradle.kts\&quot;,\&quot;methods\&quot;:[]},\&quot;/settings.gradle.kts\&quot;:{\&quot;file_path\&quot;:\&quot;/settings.gradle.kts\&quot;,\&quot;file_name\&quot;:\&quot;settings.gradle.kts\&quot;,\&quot;methods\&quot;:[]}}&quot;}" />
  </component>
</project>